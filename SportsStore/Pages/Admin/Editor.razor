@page "/admin/products/edit/{id:long}"
@page "/admin/products/create"
@inherits OwningComponentBase<IStoreRepository>

<style>
    div.validation-message { color: rgb(220, 53, 69); font-weight: 500 }
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Product</h3>
<EditForm Model="haber" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator />
    @if (haber.Id != 0)
    {
        <div class="form-group">
            <label>ID</label>
            <input class="form-control" disabled value="@haber.Id" />
        </div>
    }
    <div class="form-group">
        <label>Başlık</label>
        <InputText class="form-control" @bind-Value="haber.Baslik" />
    </div>
    <div class="form-group">
        <label>Metin</label>
        <InputText class="form-control" @bind-Value="haber.Metin" />
    </div>
    <div class="form-group">
        <label>Kategori</label>
        <InputSelect class="form-control" @bind-Value="haber.Kategori" placeholder="seçiniz">
            <option>Dünya</option>
            <option>Ekonomi</option>
            <option>Siyaset</option>
            <option>Gündem</option>
            <option>Spor</option>
            <option>Teknoloji</option>
        </InputSelect>
    </div>
    <div class="form-group">
        <label>Resim</label>
        <InputText class="form-control" @bind-Value="haber.ResimYolu" />
    </div>

    <button type="submit" class="btn btn-@ThemeColor">Save</button>
    <NavLink class="btn btn-secondary" href="/admin/products">Cancel</NavLink>
</EditForm>

@code {

    public IStoreRepository Repository => Service;

    [Inject]
    public NavigationManager NavManager { get; set; }

    [Parameter]
    public long Id { get; set; } = 0;

    public Haber haber { get; set; } = new Haber();

    protected override void OnParametersSet() {
        if (Id != 0) {
            haber = Repository.Haberler.FirstOrDefault(p => p.Id == Id);
        }
    }

    public void SaveProduct() {
        if (Id == 0) {
            Repository.CreateProduct(haber);
        } else {
            Repository.SaveProduct(haber);
        }
        NavManager.NavigateTo("/admin/products");
    }

    public string ThemeColor => Id == 0 ? "primary" : "warning";
    public string TitleText => Id == 0 ? "Create" : "Edit";
}
